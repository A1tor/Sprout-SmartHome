<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewmodels="clr-namespace:Sprout.ViewModels"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:mvvm="clr-namespace:MvvmHelpers;assembly=MvvmHelpers"
             xmlns:model="clr-namespace:Sprout.Models" 
             xmlns:views="clr-namespace:Sprout.Views"
             xmlns:resx="clr-namespace:Sprout.Resx"
             x:Name="SmartDevicePage"
             x:Class="Sprout.Views.MainPage"
             x:DataType="viewmodels:MainPageViewModel"
             Style="{StaticResource BasePage}">
    
    <ContentPage.BindingContext>
        <viewmodels:MainPageViewModel/>
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <xct:ItemSelectedEventArgsConverter x:Key="ItemSelectedEventArgsConverter"/>
            <DataTemplate x:Key="Normal">
                <ViewCell>
                    <ViewCell.ContextActions>
                        <MenuItem
                            Command="{Binding Source={x:Reference SmartDevicePage}, Path=BindingContext.RemoveCommand}"
                            CommandParameter="{Binding .}"
                            IsDestructive="True"
                            Text="Delete" />
                    </ViewCell.ContextActions>
                    <views:DeviceCard/>
                </ViewCell>
            </DataTemplate>
            <DataTemplate x:Key="Empty">
                <ViewCell>
                    <views:EmptyCard/>
                </ViewCell>
            </DataTemplate>
            <DataTemplate x:Key="Room">
                <ViewCell>
                    <views:RoomCard/>
                </ViewCell>
            </DataTemplate>
            <viewmodels:DeviceSelector x:Key="DeviceSelector"
                                       Normal="{StaticResource Normal}"
                                       Empty="{StaticResource Empty}"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem Text="{x:Static resx:AppResources.Add}" Command="{Binding AddCommand}"/>
    </ContentPage.ToolbarItems>

    <StackLayout Orientation="Horizontal">
        <ListView IsPullToRefreshEnabled="True"
              IsRefreshing="{Binding IsBusy, Mode=OneWay}"
              RefreshCommand="{Binding RefreshCommand}"
              CachingStrategy="RecycleElement" 
              ItemsSource="{Binding SmartDevicesGroups}"
              SelectionMode="Single"
              IsGroupingEnabled="True"
              GroupDisplayBinding="{Binding Key}"
              SelectedItem="{Binding SelectedDevice, Mode=TwoWay}"
              Style="{StaticResource DeviceListView}"
              ItemTemplate="{StaticResource DeviceSelector}">
            <ListView.Behaviors>
                <xct:EventToCommandBehavior
                    EventName="ItemSelected"
                    Command="{Binding SelectedCommand}"
                    EventArgsConverter="{StaticResource ItemSelectedEventArgsConverter}"/>
            </ListView.Behaviors>
        </ListView>
        
        <StackLayout WidthRequest="100" VerticalOptions="FillAndExpand"
                     Margin="0, 0, 5, 0"
                     >
            <Frame Margin="0, 10, 0, 5"
                BorderColor="{StaticResource SecondaryGreen}"
                   HeightRequest="60"
                   CornerRadius="100">
                <ImageButton Source="https://upload.wikimedia.org/wikipedia/commons/thumb/9/90/Plus%2B.svg/239px-Plus%2B.svg.png"
                    Style="{StaticResource RoundButton}"
                    Command="{Binding AddRoomCommand}"/>
            </Frame>
            <ListView RowHeight="110"
                CachingStrategy="RecycleElement" 
                    ItemsSource="{Binding RoomFilters}"
                    SelectedItem="{Binding SelectedRoom}"
                    ItemTemplate="{StaticResource Room}" AutomationProperties.IsInAccessibleTree="False">
                <ListView.Behaviors>
                    <xct:EventToCommandBehavior
                        EventName="ItemSelected"
                        Command="{Binding SelectedRoomCommand}"
                        EventArgsConverter="{StaticResource ItemSelectedEventArgsConverter}"/>
                </ListView.Behaviors>
            </ListView>
        </StackLayout>
    </StackLayout>
</ContentPage>